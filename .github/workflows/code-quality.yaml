name: code quality

on:
  push:
  pull_request:
    types: [opened]
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]

    env:
      PYTHONPATH: .

    steps:
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: checkout
      uses: actions/checkout@v2

    - name: setup environment
      run: |
        sudo ln -fs /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
        sudo ln -fs /usr/share/zoneinfo/Europe/Stockholm /etc/timezone
        echo $HOME/.local/bin >> $GITHUB_PATH

    - name: cache python environment
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt')}}

    - name: install python dependencies
      run: |
        pip install --upgrade wheel
        pip install --upgrade --upgrade-strategy eager -r <(cat requirements.txt requirements-dev.txt)

    - name: run pytest
      run: |
        # *messagequeue* requires grizzly[mq] -> requirements-extras.txt and external libraries
        pytest --ignore-glob=*test_messagequeue* --ignore-glob=*messagequeue/test_*

    - name: run coverage
      run: |
        coverage report --omit=grizzly/users/messagequeue.py,grizzly_extras/messagequeue/*,tests/*,setup.py --fail-under=95

    - name: run pylint
      run: |
        pylint --fail-under=10 --ignore=messagequeue.py,test_messagequeue.py,grizzly_extras/messagequeue/__init__.py,tests/test_grizzly_extras/messagequeue/test__init__.py grizzly/ grizzly_extras/ tests/ example/

    - name: run mypy
      run: |
        arguments="$(sed '/^[ \t]*\/\/.*/d;/^$/d' .devcontainer/devcontainer.json | jq '.settings["python.linting.mypyArgs"] | join(" ")' | awk -F\" '{print $2}')"
        mypy ${arguments} grizzly/ grizzly_extras/ tests/ example/
