[build-system]
requires = ["setuptools>=60.10.0", "wheel>=0.37.0", "setuptools-scm>=7.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "grizzly-loadtester"
description = "Traffic generator based on locust and behave"
dynamic = ["version"]
authors = [
    {name = 'biometria', email='opensource@biometria.se'}
]
readme = "README.md"
license = {text = 'MIT'}
requires-python = ">=3.8"
dependencies = [
    "locust >=2.16.0,<2.17.0",
    "azure-core >=1.24.0,<2.0.0",
    "azure-servicebus >=7.6.0,<7.10.0",
    "azure-storage-blob >=12.9.0,<13.0.0",
    "azure-iot-device >=2.12.0,<3.0.0",
    "behave >=1.2.6,<2.0.0",
    "influxdb >=5.3.1,<6.0.0",
    "Jinja2 >=3.0.3,<4.0.0",
    "jsonpath-ng >=1.5.3,<2.0.0",
    "lxml >=4.8.0,<5.0.0",
    "mypy-extensions >=0.4.3",
    "opencensus-ext-azure >=1.1.1",
    "python-dateutil >=2.8.2,<3.0.0",
    "backports.zoneinfo >=0.2.1;python_version<'3.9'",
    "pyzmq >=22.2.1,!=23.0.0",
    "PyYAML >=6.0.1,<7.0.0",
    "setproctitle >=1.2.2",
    "tzdata >=2022.1",
    "pyotp >=2.9.0,<3.0.0"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython"
]
keywords = [
    "locust",
    "behave",
    "load",
    "loadtest",
    "performance",
    "traffic generator"
]

[project.urls]
Documentation = 'https://biometria-se.github.io/grizzly/'
Code = 'https://github.com/biometria-se/grizzly/'
Tracker = 'https://github.com/Biometria-se/grizzly/issues'

[project.scripts]
async-messaged = "grizzly_extras.async_message.daemon:main"

[project.entry-points."novella.markdown.preprocessors"]
grizzly = "grizzly_extras.novella:GrizzlyMarkdownProcessor"

[project.entry-points."novella.templates"]
grizzly-mkdocs = "grizzly_extras.novella:GrizzlyMkdocsTemplate"

[project.optional-dependencies]
mq = [
    "pymqi ==1.12.10"
]
dev = [
    "wheel>=0.37.0",
    "astunparse >=1.6.3",
    "mypy >=1.3.0",
    "pytest >=7.0.0",
    "coverage[toml] >=6.4.4",
    "pytest-cov >=3.0.0",
    "pytest-mock >=3.7.0",
    "pytest-timeout >=2.1.0",
    "atomicwrites >= 1.4.0",
    "types-paramiko >=2.8.13",
    "types-python-dateutil >=2.8.9",
    "types-PyYAML <6.0.0,>=5.3.0",
    "types-requests >=2.27.0",
    "types-Jinja2 >=2.0.0",
    "types-backports >=0.1.3",
    "snakeviz",
    "ruff <1.0.0"
]
ci = [
    "build >=0.7.0",
    "twine >=3.8.0,<4.0.0"
]
docs = [
    "novella >=0.2.6",
    "pydoc-markdown >=4.6.1",
    "docspec >=2.1.2",
    "docspec-python >=2.1.2",
    "pytablewriter >=0.64.1",
    "pip-licenses >=3.5.3,<4.2.0",
    "requests >=2.27.1",
    "mkdocs >=1.3.0",
    "mkdocs-material >=8.3.2",
    "packaging >=21.3",
    "grizzly-loadtester-cli",
    "python-frontmatter",
    "mistune >=3.0.2"
]

[tool.setuptools_scm]
write_to = "grizzly/__version__.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
include = ["grizzly*"]
exclude = ["tests"]

[tool.setuptools.package-data]
grizzly = ["py.typed"]
grizzly_extras = ["py.typed"]

[tool.ruff]
exclude = [
   ".env", ".venv", ".pytest_tmp", "build", "dist"
]
line-length = 180
indent-width = 4

[tool.ruff.per-file-ignores]
"script/**" = ["INP001", "D100"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101", "ANN102", "ANN401",
    "BLE001",
    "D101", "D102", "D103", "D105", "D107", "D203", "D213", "D205", "D301", "D407", "D417",
    "DTZ005",
    "E722", "E402",
    "F405", "F403",
    "N801",
    "PD011",
    "PLR2004",
    "UP007", "UP006",
    "Q000",
    "S101", "S104", "S314", "S603", "S701",
    "SLF001",
    "T201",
    "TRY301"
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pylint]
max-branches = 15
max-args = 10

[tool.mypy]
# https://github.com/python/mypy/issues/5870
#follow_missing_imports = true
show_column_numbers = true
check_untyped_defs = true
disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_any_generics = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
disallow_incomplete_defs = true
#disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "grizzly.steps.*"
no_implicit_reexport = false

#[[tool.mypy.overrides]]
#module = "grizzly.scenario.iterator"
#warn_unused_ignores = false

#[[tool.mypy.overrides]]
#module = "grizzly.tasks.date"
#ignore_missing_imports = true
#warn_unused_ignores = false

#[[tool.mypy.overrides]]
#module = "grizzly.testdata.variables.date"
#ignore_missing_imports = true
#warn_unused_ignores = false

#[[tool.mypy.overrides]]
#module = "zoneinfo.*"
#ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "behave.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pymqi.*"
ignore_missing_imports = true

#[[tool.mypy.overrides]]
#module = "setproctitle.*"
#ignore_missing_imports = true

#[[tool.mypy.overrides]]
#module = "urllib3.*"
#ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gevent.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "influxdb.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpath_ng.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "parse.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "opencensus.ext.azure.*"
ignore_missing_imports = true

#[[tool.mypy.overrides]]
#module = "zmq.*"
#ignore_missing_imports = true

#[[tool.mypy.overrides]]
#module = "azure.*"
#ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "azure.iot.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "geventhttpclient.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "piplicenses.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "frontmatter.*"
ignore_missing_imports = true

[tool.coverage.run]
omit = ["tests/*", "setup.py", ".pytest_tmp/*"]

[tool.pytest.ini_options]
addopts = [
    "--cov=.",
    "--cov-report=",
    "--no-cov-on-fail"
]
timeout = 10
filterwarnings = [
    "ignore:setDaemon\\(\\) is deprecated.*:DeprecationWarning",
    "ignore:.*pkg_resources.*:DeprecationWarning",
    "ignore:Use setlocale.*instead:DeprecationWarning",
    "error:.*:gevent.monkey.MonkeyPatchWarning"
]
